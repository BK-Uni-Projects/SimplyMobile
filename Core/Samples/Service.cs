//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace Pilat
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Job", Namespace="http://schemas.datacontract.org/2004/07/BMP.Xrm.Mobile.WebService")]
    public partial class Job : object
    {
        
        private Pilat.AlarmAdvance AlarmAdvanceField;
        
        private bool CancelledField;
        
        private System.DateTime DefaultAlarmTimeField;
        
        private Pilat.Defect[] DefectsField;
        
        private string DisplayField;
        
        private System.DateTime EndField;
        
        private System.Nullable<int> FromDirectionValueField;
        
        private System.Nullable<System.Guid> FromLocationIdField;
        
        private System.Guid IdField;
        
        private bool IsNightTimeJobField;
        
        private string JobTypeField;
        
        private System.Guid NotificationIdField;
        
        private string PilotStartLocationField;
        
        private string PilotsField;
        
        private string ReasonField;
        
        private System.DateTime StartField;
        
        private string StatusField;
        
        private bool SuppressAlarmField;
        
        private Pilat.MovementTimes TimesField;
        
        private System.Nullable<int> ToDirectionValueField;
        
        private System.Nullable<System.Guid> ToLocationIdField;
        
        private int TugsField;
        
        private Pilat.Vessel VesselField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pilat.AlarmAdvance AlarmAdvance
        {
            get
            {
                return this.AlarmAdvanceField;
            }
            set
            {
                this.AlarmAdvanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Cancelled
        {
            get
            {
                return this.CancelledField;
            }
            set
            {
                this.CancelledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DefaultAlarmTime
        {
            get
            {
                return this.DefaultAlarmTimeField;
            }
            set
            {
                this.DefaultAlarmTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pilat.Defect[] Defects
        {
            get
            {
                return this.DefectsField;
            }
            set
            {
                this.DefectsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Display
        {
            get
            {
                return this.DisplayField;
            }
            set
            {
                this.DisplayField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End
        {
            get
            {
                return this.EndField;
            }
            set
            {
                this.EndField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FromDirectionValue
        {
            get
            {
                return this.FromDirectionValueField;
            }
            set
            {
                this.FromDirectionValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> FromLocationId
        {
            get
            {
                return this.FromLocationIdField;
            }
            set
            {
                this.FromLocationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNightTimeJob
        {
            get
            {
                return this.IsNightTimeJobField;
            }
            set
            {
                this.IsNightTimeJobField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobType
        {
            get
            {
                return this.JobTypeField;
            }
            set
            {
                this.JobTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid NotificationId
        {
            get
            {
                return this.NotificationIdField;
            }
            set
            {
                this.NotificationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PilotStartLocation
        {
            get
            {
                return this.PilotStartLocationField;
            }
            set
            {
                this.PilotStartLocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pilots
        {
            get
            {
                return this.PilotsField;
            }
            set
            {
                this.PilotsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason
        {
            get
            {
                return this.ReasonField;
            }
            set
            {
                this.ReasonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start
        {
            get
            {
                return this.StartField;
            }
            set
            {
                this.StartField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SuppressAlarm
        {
            get
            {
                return this.SuppressAlarmField;
            }
            set
            {
                this.SuppressAlarmField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pilat.MovementTimes Times
        {
            get
            {
                return this.TimesField;
            }
            set
            {
                this.TimesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ToDirectionValue
        {
            get
            {
                return this.ToDirectionValueField;
            }
            set
            {
                this.ToDirectionValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ToLocationId
        {
            get
            {
                return this.ToLocationIdField;
            }
            set
            {
                this.ToLocationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tugs
        {
            get
            {
                return this.TugsField;
            }
            set
            {
                this.TugsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pilat.Vessel Vessel
        {
            get
            {
                return this.VesselField;
            }
            set
            {
                this.VesselField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovementTimes", Namespace="http://schemas.datacontract.org/2004/07/BMP.Xrm.Mobile.WebService")]
    public partial class MovementTimes : object
    {
        
        private System.DateTime _01_PilotStartField;
        
        private System.DateTime _02_ArriveStationField;
        
        private System.DateTime _03_DepartStationField;
        
        private System.DateTime _04_POBField;
        
        private System.DateTime _05_StartMovingField;
        
        private System.DateTime _06_EndMovingField;
        
        private System.DateTime _07_DisembarkField;
        
        private System.DateTime _08_ArriveStationField;
        
        private System.DateTime _09_DepartStationField;
        
        private System.DateTime _10_ReturnHomeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _01_PilotStart
        {
            get
            {
                return this._01_PilotStartField;
            }
            set
            {
                this._01_PilotStartField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _02_ArriveStation
        {
            get
            {
                return this._02_ArriveStationField;
            }
            set
            {
                this._02_ArriveStationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _03_DepartStation
        {
            get
            {
                return this._03_DepartStationField;
            }
            set
            {
                this._03_DepartStationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _04_POB
        {
            get
            {
                return this._04_POBField;
            }
            set
            {
                this._04_POBField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _05_StartMoving
        {
            get
            {
                return this._05_StartMovingField;
            }
            set
            {
                this._05_StartMovingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _06_EndMoving
        {
            get
            {
                return this._06_EndMovingField;
            }
            set
            {
                this._06_EndMovingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _07_Disembark
        {
            get
            {
                return this._07_DisembarkField;
            }
            set
            {
                this._07_DisembarkField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _08_ArriveStation
        {
            get
            {
                return this._08_ArriveStationField;
            }
            set
            {
                this._08_ArriveStationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _09_DepartStation
        {
            get
            {
                return this._09_DepartStationField;
            }
            set
            {
                this._09_DepartStationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _10_ReturnHome
        {
            get
            {
                return this._10_ReturnHomeField;
            }
            set
            {
                this._10_ReturnHomeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vessel", Namespace="http://schemas.datacontract.org/2004/07/BMP.Xrm.Mobile.WebService")]
    public partial class Vessel : object
    {
        
        private string AgencyField;
        
        private double BeamField;
        
        private bool BowThrusterField;
        
        private double BowThrusterPowerField;
        
        private decimal DraftField;
        
        private double GrossRegisteredTonnageField;
        
        private System.Guid IdField;
        
        private decimal LengthOverallField;
        
        private string NameField;
        
        private bool SternThrusterField;
        
        private double SternThrusterPowerField;
        
        private string TypeField;
        
        private int TypeCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Agency
        {
            get
            {
                return this.AgencyField;
            }
            set
            {
                this.AgencyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Beam
        {
            get
            {
                return this.BeamField;
            }
            set
            {
                this.BeamField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BowThruster
        {
            get
            {
                return this.BowThrusterField;
            }
            set
            {
                this.BowThrusterField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BowThrusterPower
        {
            get
            {
                return this.BowThrusterPowerField;
            }
            set
            {
                this.BowThrusterPowerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Draft
        {
            get
            {
                return this.DraftField;
            }
            set
            {
                this.DraftField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossRegisteredTonnage
        {
            get
            {
                return this.GrossRegisteredTonnageField;
            }
            set
            {
                this.GrossRegisteredTonnageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LengthOverall
        {
            get
            {
                return this.LengthOverallField;
            }
            set
            {
                this.LengthOverallField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SternThruster
        {
            get
            {
                return this.SternThrusterField;
            }
            set
            {
                this.SternThrusterField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SternThrusterPower
        {
            get
            {
                return this.SternThrusterPowerField;
            }
            set
            {
                this.SternThrusterPowerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeCode
        {
            get
            {
                return this.TypeCodeField;
            }
            set
            {
                this.TypeCodeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmAdvance", Namespace="http://schemas.datacontract.org/2004/07/BMP.Xrm.Mobile.WebService")]
    public enum AlarmAdvance : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes0 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes15 = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes30 = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes45 = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes60 = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes75 = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes90 = 90,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Defect", Namespace="http://schemas.datacontract.org/2004/07/BMP.Xrm.Mobile.WebService")]
    public partial class Defect : object
    {
        
        private int DefectClassificationValueField;
        
        private System.Guid IdField;
        
        private string SummaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefectClassificationValue
        {
            get
            {
                return this.DefectClassificationValueField;
            }
            set
            {
                this.DefectClassificationValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary
        {
            get
            {
                return this.SummaryField;
            }
            set
            {
                this.SummaryField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectClassification", Namespace="http://schemas.datacontract.org/2004/07/BMP.Xrm.Mobile.WebService")]
    public partial class DefectClassification : object
    {
        
        private string TextField;
        
        private int ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Direction", Namespace="http://schemas.datacontract.org/2004/07/BMP.Xrm.Mobile.WebService")]
    public partial class Direction : object
    {
        
        private string TextField;
        
        private int ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/BMP.Xrm.Mobile.WebService")]
    public partial class Location : object
    {
        
        private System.Guid IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobType", Namespace="http://schemas.datacontract.org/2004/07/BMP.Xrm.Mobile.WebService")]
    public enum JobType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Arrival = 100000000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Departure = 100000001,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Removal = 100000002,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        External = 100000003,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Pilat.IMobileService")]
    public interface IMobileService
    {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/Login", ReplyAction="http://tempuri.org/IMobileService/LoginResponse")]
        System.IAsyncResult BeginLogin(string username, string password, string deviceToken, System.AsyncCallback callback, object asyncState);
        
        string EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/RetrieveJobs", ReplyAction="http://tempuri.org/IMobileService/RetrieveJobsResponse")]
        System.IAsyncResult BeginRetrieveJobs(string token, System.AsyncCallback callback, object asyncState);
        
        Pilat.Job[] EndRetrieveJobs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/RetrieveJob", ReplyAction="http://tempuri.org/IMobileService/RetrieveJobResponse")]
        System.IAsyncResult BeginRetrieveJob(string token, System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState);
        
        Pilat.Job EndRetrieveJob(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/RetrieveDefectClassifications", ReplyAction="http://tempuri.org/IMobileService/RetrieveDefectClassificationsResponse")]
        System.IAsyncResult BeginRetrieveDefectClassifications(string token, System.AsyncCallback callback, object asyncState);
        
        Pilat.DefectClassification[] EndRetrieveDefectClassifications(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/RetrieveDirections", ReplyAction="http://tempuri.org/IMobileService/RetrieveDirectionsResponse")]
        System.IAsyncResult BeginRetrieveDirections(string token, System.AsyncCallback callback, object asyncState);
        
        Pilat.Direction[] EndRetrieveDirections(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/RetrieveLocations", ReplyAction="http://tempuri.org/IMobileService/RetrieveLocationsResponse")]
        System.IAsyncResult BeginRetrieveLocations(string token, System.AsyncCallback callback, object asyncState);
        
        Pilat.Location[] EndRetrieveLocations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/AcknowledgeNotification", ReplyAction="http://tempuri.org/IMobileService/AcknowledgeNotificationResponse")]
        System.IAsyncResult BeginAcknowledgeNotification(string token, System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState);
        
        void EndAcknowledgeNotification(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/AcknowledgeAlarm", ReplyAction="http://tempuri.org/IMobileService/AcknowledgeAlarmResponse")]
        System.IAsyncResult BeginAcknowledgeAlarm(string token, System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState);
        
        void EndAcknowledgeAlarm(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/UpdateAlarmAdvance", ReplyAction="http://tempuri.org/IMobileService/UpdateAlarmAdvanceResponse")]
        System.IAsyncResult BeginUpdateAlarmAdvance(string token, System.Guid jobNotificationId, Pilat.AlarmAdvance alarmAdvance, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateAlarmAdvance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/UpdateJob", ReplyAction="http://tempuri.org/IMobileService/UpdateJobResponse")]
        System.IAsyncResult BeginUpdateJob(string token, System.Guid jobId, System.Nullable<int> fromDirectionValue, System.Nullable<System.Guid> fromLocationId, System.Nullable<int> toDirectionValue, System.Nullable<System.Guid> toLocationId, System.Nullable<Pilat.JobType> jobType, System.Nullable<int> tugs, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateJob(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/UpdateVessel", ReplyAction="http://tempuri.org/IMobileService/UpdateVesselResponse")]
        System.IAsyncResult BeginUpdateVessel(string token, System.Guid jobId, decimal draft, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateVessel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/SubmitDefects", ReplyAction="http://tempuri.org/IMobileService/SubmitDefectsResponse")]
        System.IAsyncResult BeginSubmitDefects(string token, System.Guid jobId, Pilat.Defect[] defects, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitDefects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/SubmitRemark", ReplyAction="http://tempuri.org/IMobileService/SubmitRemarkResponse")]
        System.IAsyncResult BeginSubmitRemark(string token, System.Guid jobId, string remark, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitRemark(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/SubmitChit", ReplyAction="http://tempuri.org/IMobileService/SubmitChitResponse")]
        System.IAsyncResult BeginSubmitChit(string token, System.Guid jobId, System.DateTime _01_PilotStart, System.DateTime _02_ArriveStation, System.DateTime _03_DepartStation, System.DateTime _04_POB, System.DateTime _05_StartMoving, System.DateTime _06_EndMoving, System.DateTime _07_Disembark, System.DateTime _08_ArriveStation, System.DateTime _09_DepartStation, System.DateTime _10_ReturnHome, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitChit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/RemoveDefect", ReplyAction="http://tempuri.org/IMobileService/RemoveDefectResponse")]
        System.IAsyncResult BeginRemoveDefect(string token, System.Guid jobId, System.Guid defectId, string removalReason, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveDefect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/SendPilotJobNotification", ReplyAction="http://tempuri.org/IMobileService/SendPilotJobNotificationResponse")]
        System.IAsyncResult BeginSendPilotJobNotification(System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState);
        
        void EndSendPilotJobNotification(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMobileService/SendJobAlarmNotification", ReplyAction="http://tempuri.org/IMobileService/SendJobAlarmNotificationResponse")]
        System.IAsyncResult BeginSendJobAlarmNotification(System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState);
        
        void EndSendJobAlarmNotification(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMobileServiceChannel : Pilat.IMobileService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public RetrieveJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public Pilat.Job[] Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Pilat.Job[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public RetrieveJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public Pilat.Job Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Pilat.Job)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveDefectClassificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public RetrieveDefectClassificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public Pilat.DefectClassification[] Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Pilat.DefectClassification[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveDirectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public RetrieveDirectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public Pilat.Direction[] Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Pilat.Direction[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public RetrieveLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public Pilat.Location[] Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Pilat.Location[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MobileServiceClient : System.ServiceModel.ClientBase<Pilat.IMobileService>, Pilat.IMobileService
    {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveJobsDelegate;
        
        private EndOperationDelegate onEndRetrieveJobsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveJobsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveJobDelegate;
        
        private EndOperationDelegate onEndRetrieveJobDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveJobCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveDefectClassificationsDelegate;
        
        private EndOperationDelegate onEndRetrieveDefectClassificationsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveDefectClassificationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveDirectionsDelegate;
        
        private EndOperationDelegate onEndRetrieveDirectionsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveDirectionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveLocationsDelegate;
        
        private EndOperationDelegate onEndRetrieveLocationsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveLocationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAcknowledgeNotificationDelegate;
        
        private EndOperationDelegate onEndAcknowledgeNotificationDelegate;
        
        private System.Threading.SendOrPostCallback onAcknowledgeNotificationCompletedDelegate;
        
        private BeginOperationDelegate onBeginAcknowledgeAlarmDelegate;
        
        private EndOperationDelegate onEndAcknowledgeAlarmDelegate;
        
        private System.Threading.SendOrPostCallback onAcknowledgeAlarmCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAlarmAdvanceDelegate;
        
        private EndOperationDelegate onEndUpdateAlarmAdvanceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAlarmAdvanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateJobDelegate;
        
        private EndOperationDelegate onEndUpdateJobDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateJobCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVesselDelegate;
        
        private EndOperationDelegate onEndUpdateVesselDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVesselCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitDefectsDelegate;
        
        private EndOperationDelegate onEndSubmitDefectsDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitDefectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitRemarkDelegate;
        
        private EndOperationDelegate onEndSubmitRemarkDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitRemarkCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitChitDelegate;
        
        private EndOperationDelegate onEndSubmitChitDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitChitCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveDefectDelegate;
        
        private EndOperationDelegate onEndRemoveDefectDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveDefectCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendPilotJobNotificationDelegate;
        
        private EndOperationDelegate onEndSendPilotJobNotificationDelegate;
        
        private System.Threading.SendOrPostCallback onSendPilotJobNotificationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendJobAlarmNotificationDelegate;
        
        private EndOperationDelegate onEndSendJobAlarmNotificationDelegate;
        
        private System.Threading.SendOrPostCallback onSendJobAlarmNotificationCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MobileServiceClient()
        {
        }
        
        public MobileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public MobileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public MobileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public MobileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }

        protected override IMobileService CreateChannel()
        {
            return new MobileServiceClientChannel(this);
        }
        
        public System.Net.CookieContainer CookieContainer
        {
            get
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    return httpCookieContainerManager.CookieContainer;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else
                {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<RetrieveJobsCompletedEventArgs> RetrieveJobsCompleted;
        
        public event System.EventHandler<RetrieveJobCompletedEventArgs> RetrieveJobCompleted;
        
        public event System.EventHandler<RetrieveDefectClassificationsCompletedEventArgs> RetrieveDefectClassificationsCompleted;
        
        public event System.EventHandler<RetrieveDirectionsCompletedEventArgs> RetrieveDirectionsCompleted;
        
        public event System.EventHandler<RetrieveLocationsCompletedEventArgs> RetrieveLocationsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AcknowledgeNotificationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AcknowledgeAlarmCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAlarmAdvanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateJobCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateVesselCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitDefectsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitRemarkCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitChitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveDefectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendPilotJobNotificationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendJobAlarmNotificationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginLogin(string username, string password, string deviceToken, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginLogin(username, password, deviceToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Pilat.IMobileService.EndLogin(System.IAsyncResult result)
        {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string deviceToken = ((string)(inValues[2]));
            return ((Pilat.IMobileService)(this)).BeginLogin(username, password, deviceToken, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result)
        {
            string retVal = ((Pilat.IMobileService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state)
        {
            if ((this.LoginCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password, string deviceToken)
        {
            this.LoginAsync(username, password, deviceToken, null);
        }
        
        public void LoginAsync(string username, string password, string deviceToken, object userState)
        {
            if ((this.onBeginLoginDelegate == null))
            {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null))
            {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null))
            {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password,
                        deviceToken}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginRetrieveJobs(string token, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRetrieveJobs(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Pilat.Job[] Pilat.IMobileService.EndRetrieveJobs(System.IAsyncResult result)
        {
            return base.Channel.EndRetrieveJobs(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveJobs(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            return ((Pilat.IMobileService)(this)).BeginRetrieveJobs(token, callback, asyncState);
        }
        
        private object[] OnEndRetrieveJobs(System.IAsyncResult result)
        {
            Pilat.Job[] retVal = ((Pilat.IMobileService)(this)).EndRetrieveJobs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveJobsCompleted(object state)
        {
            if ((this.RetrieveJobsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveJobsCompleted(this, new RetrieveJobsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveJobsAsync(string token)
        {
            this.RetrieveJobsAsync(token, null);
        }
        
        public void RetrieveJobsAsync(string token, object userState)
        {
            if ((this.onBeginRetrieveJobsDelegate == null))
            {
                this.onBeginRetrieveJobsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveJobs);
            }
            if ((this.onEndRetrieveJobsDelegate == null))
            {
                this.onEndRetrieveJobsDelegate = new EndOperationDelegate(this.OnEndRetrieveJobs);
            }
            if ((this.onRetrieveJobsCompletedDelegate == null))
            {
                this.onRetrieveJobsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveJobsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveJobsDelegate, new object[] {
                        token}, this.onEndRetrieveJobsDelegate, this.onRetrieveJobsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginRetrieveJob(string token, System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRetrieveJob(token, jobNotificationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Pilat.Job Pilat.IMobileService.EndRetrieveJob(System.IAsyncResult result)
        {
            return base.Channel.EndRetrieveJob(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveJob(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobNotificationId = ((System.Guid)(inValues[1]));
            return ((Pilat.IMobileService)(this)).BeginRetrieveJob(token, jobNotificationId, callback, asyncState);
        }
        
        private object[] OnEndRetrieveJob(System.IAsyncResult result)
        {
            Pilat.Job retVal = ((Pilat.IMobileService)(this)).EndRetrieveJob(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveJobCompleted(object state)
        {
            if ((this.RetrieveJobCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveJobCompleted(this, new RetrieveJobCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveJobAsync(string token, System.Guid jobNotificationId)
        {
            this.RetrieveJobAsync(token, jobNotificationId, null);
        }
        
        public void RetrieveJobAsync(string token, System.Guid jobNotificationId, object userState)
        {
            if ((this.onBeginRetrieveJobDelegate == null))
            {
                this.onBeginRetrieveJobDelegate = new BeginOperationDelegate(this.OnBeginRetrieveJob);
            }
            if ((this.onEndRetrieveJobDelegate == null))
            {
                this.onEndRetrieveJobDelegate = new EndOperationDelegate(this.OnEndRetrieveJob);
            }
            if ((this.onRetrieveJobCompletedDelegate == null))
            {
                this.onRetrieveJobCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveJobCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveJobDelegate, new object[] {
                        token,
                        jobNotificationId}, this.onEndRetrieveJobDelegate, this.onRetrieveJobCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginRetrieveDefectClassifications(string token, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRetrieveDefectClassifications(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Pilat.DefectClassification[] Pilat.IMobileService.EndRetrieveDefectClassifications(System.IAsyncResult result)
        {
            return base.Channel.EndRetrieveDefectClassifications(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveDefectClassifications(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            return ((Pilat.IMobileService)(this)).BeginRetrieveDefectClassifications(token, callback, asyncState);
        }
        
        private object[] OnEndRetrieveDefectClassifications(System.IAsyncResult result)
        {
            Pilat.DefectClassification[] retVal = ((Pilat.IMobileService)(this)).EndRetrieveDefectClassifications(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveDefectClassificationsCompleted(object state)
        {
            if ((this.RetrieveDefectClassificationsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveDefectClassificationsCompleted(this, new RetrieveDefectClassificationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveDefectClassificationsAsync(string token)
        {
            this.RetrieveDefectClassificationsAsync(token, null);
        }
        
        public void RetrieveDefectClassificationsAsync(string token, object userState)
        {
            if ((this.onBeginRetrieveDefectClassificationsDelegate == null))
            {
                this.onBeginRetrieveDefectClassificationsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveDefectClassifications);
            }
            if ((this.onEndRetrieveDefectClassificationsDelegate == null))
            {
                this.onEndRetrieveDefectClassificationsDelegate = new EndOperationDelegate(this.OnEndRetrieveDefectClassifications);
            }
            if ((this.onRetrieveDefectClassificationsCompletedDelegate == null))
            {
                this.onRetrieveDefectClassificationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveDefectClassificationsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveDefectClassificationsDelegate, new object[] {
                        token}, this.onEndRetrieveDefectClassificationsDelegate, this.onRetrieveDefectClassificationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginRetrieveDirections(string token, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRetrieveDirections(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Pilat.Direction[] Pilat.IMobileService.EndRetrieveDirections(System.IAsyncResult result)
        {
            return base.Channel.EndRetrieveDirections(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveDirections(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            return ((Pilat.IMobileService)(this)).BeginRetrieveDirections(token, callback, asyncState);
        }
        
        private object[] OnEndRetrieveDirections(System.IAsyncResult result)
        {
            Pilat.Direction[] retVal = ((Pilat.IMobileService)(this)).EndRetrieveDirections(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveDirectionsCompleted(object state)
        {
            if ((this.RetrieveDirectionsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveDirectionsCompleted(this, new RetrieveDirectionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveDirectionsAsync(string token)
        {
            this.RetrieveDirectionsAsync(token, null);
        }
        
        public void RetrieveDirectionsAsync(string token, object userState)
        {
            if ((this.onBeginRetrieveDirectionsDelegate == null))
            {
                this.onBeginRetrieveDirectionsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveDirections);
            }
            if ((this.onEndRetrieveDirectionsDelegate == null))
            {
                this.onEndRetrieveDirectionsDelegate = new EndOperationDelegate(this.OnEndRetrieveDirections);
            }
            if ((this.onRetrieveDirectionsCompletedDelegate == null))
            {
                this.onRetrieveDirectionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveDirectionsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveDirectionsDelegate, new object[] {
                        token}, this.onEndRetrieveDirectionsDelegate, this.onRetrieveDirectionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginRetrieveLocations(string token, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRetrieveLocations(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Pilat.Location[] Pilat.IMobileService.EndRetrieveLocations(System.IAsyncResult result)
        {
            return base.Channel.EndRetrieveLocations(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveLocations(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            return ((Pilat.IMobileService)(this)).BeginRetrieveLocations(token, callback, asyncState);
        }
        
        private object[] OnEndRetrieveLocations(System.IAsyncResult result)
        {
            Pilat.Location[] retVal = ((Pilat.IMobileService)(this)).EndRetrieveLocations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveLocationsCompleted(object state)
        {
            if ((this.RetrieveLocationsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveLocationsCompleted(this, new RetrieveLocationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveLocationsAsync(string token)
        {
            this.RetrieveLocationsAsync(token, null);
        }
        
        public void RetrieveLocationsAsync(string token, object userState)
        {
            if ((this.onBeginRetrieveLocationsDelegate == null))
            {
                this.onBeginRetrieveLocationsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveLocations);
            }
            if ((this.onEndRetrieveLocationsDelegate == null))
            {
                this.onEndRetrieveLocationsDelegate = new EndOperationDelegate(this.OnEndRetrieveLocations);
            }
            if ((this.onRetrieveLocationsCompletedDelegate == null))
            {
                this.onRetrieveLocationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveLocationsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveLocationsDelegate, new object[] {
                        token}, this.onEndRetrieveLocationsDelegate, this.onRetrieveLocationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginAcknowledgeNotification(string token, System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginAcknowledgeNotification(token, jobNotificationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndAcknowledgeNotification(System.IAsyncResult result)
        {
            base.Channel.EndAcknowledgeNotification(result);
        }
        
        private System.IAsyncResult OnBeginAcknowledgeNotification(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobNotificationId = ((System.Guid)(inValues[1]));
            return ((Pilat.IMobileService)(this)).BeginAcknowledgeNotification(token, jobNotificationId, callback, asyncState);
        }
        
        private object[] OnEndAcknowledgeNotification(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndAcknowledgeNotification(result);
            return null;
        }
        
        private void OnAcknowledgeNotificationCompleted(object state)
        {
            if ((this.AcknowledgeNotificationCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AcknowledgeNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AcknowledgeNotificationAsync(string token, System.Guid jobNotificationId)
        {
            this.AcknowledgeNotificationAsync(token, jobNotificationId, null);
        }
        
        public void AcknowledgeNotificationAsync(string token, System.Guid jobNotificationId, object userState)
        {
            if ((this.onBeginAcknowledgeNotificationDelegate == null))
            {
                this.onBeginAcknowledgeNotificationDelegate = new BeginOperationDelegate(this.OnBeginAcknowledgeNotification);
            }
            if ((this.onEndAcknowledgeNotificationDelegate == null))
            {
                this.onEndAcknowledgeNotificationDelegate = new EndOperationDelegate(this.OnEndAcknowledgeNotification);
            }
            if ((this.onAcknowledgeNotificationCompletedDelegate == null))
            {
                this.onAcknowledgeNotificationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAcknowledgeNotificationCompleted);
            }
            base.InvokeAsync(this.onBeginAcknowledgeNotificationDelegate, new object[] {
                        token,
                        jobNotificationId}, this.onEndAcknowledgeNotificationDelegate, this.onAcknowledgeNotificationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginAcknowledgeAlarm(string token, System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginAcknowledgeAlarm(token, jobNotificationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndAcknowledgeAlarm(System.IAsyncResult result)
        {
            base.Channel.EndAcknowledgeAlarm(result);
        }
        
        private System.IAsyncResult OnBeginAcknowledgeAlarm(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobNotificationId = ((System.Guid)(inValues[1]));
            return ((Pilat.IMobileService)(this)).BeginAcknowledgeAlarm(token, jobNotificationId, callback, asyncState);
        }
        
        private object[] OnEndAcknowledgeAlarm(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndAcknowledgeAlarm(result);
            return null;
        }
        
        private void OnAcknowledgeAlarmCompleted(object state)
        {
            if ((this.AcknowledgeAlarmCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AcknowledgeAlarmCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AcknowledgeAlarmAsync(string token, System.Guid jobNotificationId)
        {
            this.AcknowledgeAlarmAsync(token, jobNotificationId, null);
        }
        
        public void AcknowledgeAlarmAsync(string token, System.Guid jobNotificationId, object userState)
        {
            if ((this.onBeginAcknowledgeAlarmDelegate == null))
            {
                this.onBeginAcknowledgeAlarmDelegate = new BeginOperationDelegate(this.OnBeginAcknowledgeAlarm);
            }
            if ((this.onEndAcknowledgeAlarmDelegate == null))
            {
                this.onEndAcknowledgeAlarmDelegate = new EndOperationDelegate(this.OnEndAcknowledgeAlarm);
            }
            if ((this.onAcknowledgeAlarmCompletedDelegate == null))
            {
                this.onAcknowledgeAlarmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAcknowledgeAlarmCompleted);
            }
            base.InvokeAsync(this.onBeginAcknowledgeAlarmDelegate, new object[] {
                        token,
                        jobNotificationId}, this.onEndAcknowledgeAlarmDelegate, this.onAcknowledgeAlarmCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginUpdateAlarmAdvance(string token, System.Guid jobNotificationId, Pilat.AlarmAdvance alarmAdvance, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginUpdateAlarmAdvance(token, jobNotificationId, alarmAdvance, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndUpdateAlarmAdvance(System.IAsyncResult result)
        {
            base.Channel.EndUpdateAlarmAdvance(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAlarmAdvance(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobNotificationId = ((System.Guid)(inValues[1]));
            Pilat.AlarmAdvance alarmAdvance = ((Pilat.AlarmAdvance)(inValues[2]));
            return ((Pilat.IMobileService)(this)).BeginUpdateAlarmAdvance(token, jobNotificationId, alarmAdvance, callback, asyncState);
        }
        
        private object[] OnEndUpdateAlarmAdvance(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndUpdateAlarmAdvance(result);
            return null;
        }
        
        private void OnUpdateAlarmAdvanceCompleted(object state)
        {
            if ((this.UpdateAlarmAdvanceCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAlarmAdvanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAlarmAdvanceAsync(string token, System.Guid jobNotificationId, Pilat.AlarmAdvance alarmAdvance)
        {
            this.UpdateAlarmAdvanceAsync(token, jobNotificationId, alarmAdvance, null);
        }
        
        public void UpdateAlarmAdvanceAsync(string token, System.Guid jobNotificationId, Pilat.AlarmAdvance alarmAdvance, object userState)
        {
            if ((this.onBeginUpdateAlarmAdvanceDelegate == null))
            {
                this.onBeginUpdateAlarmAdvanceDelegate = new BeginOperationDelegate(this.OnBeginUpdateAlarmAdvance);
            }
            if ((this.onEndUpdateAlarmAdvanceDelegate == null))
            {
                this.onEndUpdateAlarmAdvanceDelegate = new EndOperationDelegate(this.OnEndUpdateAlarmAdvance);
            }
            if ((this.onUpdateAlarmAdvanceCompletedDelegate == null))
            {
                this.onUpdateAlarmAdvanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAlarmAdvanceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAlarmAdvanceDelegate, new object[] {
                        token,
                        jobNotificationId,
                        alarmAdvance}, this.onEndUpdateAlarmAdvanceDelegate, this.onUpdateAlarmAdvanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginUpdateJob(string token, System.Guid jobId, System.Nullable<int> fromDirectionValue, System.Nullable<System.Guid> fromLocationId, System.Nullable<int> toDirectionValue, System.Nullable<System.Guid> toLocationId, System.Nullable<Pilat.JobType> jobType, System.Nullable<int> tugs, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginUpdateJob(token, jobId, fromDirectionValue, fromLocationId, toDirectionValue, toLocationId, jobType, tugs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndUpdateJob(System.IAsyncResult result)
        {
            base.Channel.EndUpdateJob(result);
        }
        
        private System.IAsyncResult OnBeginUpdateJob(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobId = ((System.Guid)(inValues[1]));
            System.Nullable<int> fromDirectionValue = ((System.Nullable<int>)(inValues[2]));
            System.Nullable<System.Guid> fromLocationId = ((System.Nullable<System.Guid>)(inValues[3]));
            System.Nullable<int> toDirectionValue = ((System.Nullable<int>)(inValues[4]));
            System.Nullable<System.Guid> toLocationId = ((System.Nullable<System.Guid>)(inValues[5]));
            System.Nullable<Pilat.JobType> jobType = ((System.Nullable<Pilat.JobType>)(inValues[6]));
            System.Nullable<int> tugs = ((System.Nullable<int>)(inValues[7]));
            return ((Pilat.IMobileService)(this)).BeginUpdateJob(token, jobId, fromDirectionValue, fromLocationId, toDirectionValue, toLocationId, jobType, tugs, callback, asyncState);
        }
        
        private object[] OnEndUpdateJob(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndUpdateJob(result);
            return null;
        }
        
        private void OnUpdateJobCompleted(object state)
        {
            if ((this.UpdateJobCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateJobAsync(string token, System.Guid jobId, System.Nullable<int> fromDirectionValue, System.Nullable<System.Guid> fromLocationId, System.Nullable<int> toDirectionValue, System.Nullable<System.Guid> toLocationId, System.Nullable<Pilat.JobType> jobType, System.Nullable<int> tugs)
        {
            this.UpdateJobAsync(token, jobId, fromDirectionValue, fromLocationId, toDirectionValue, toLocationId, jobType, tugs, null);
        }
        
        public void UpdateJobAsync(string token, System.Guid jobId, System.Nullable<int> fromDirectionValue, System.Nullable<System.Guid> fromLocationId, System.Nullable<int> toDirectionValue, System.Nullable<System.Guid> toLocationId, System.Nullable<Pilat.JobType> jobType, System.Nullable<int> tugs, object userState)
        {
            if ((this.onBeginUpdateJobDelegate == null))
            {
                this.onBeginUpdateJobDelegate = new BeginOperationDelegate(this.OnBeginUpdateJob);
            }
            if ((this.onEndUpdateJobDelegate == null))
            {
                this.onEndUpdateJobDelegate = new EndOperationDelegate(this.OnEndUpdateJob);
            }
            if ((this.onUpdateJobCompletedDelegate == null))
            {
                this.onUpdateJobCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateJobCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateJobDelegate, new object[] {
                        token,
                        jobId,
                        fromDirectionValue,
                        fromLocationId,
                        toDirectionValue,
                        toLocationId,
                        jobType,
                        tugs}, this.onEndUpdateJobDelegate, this.onUpdateJobCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginUpdateVessel(string token, System.Guid jobId, decimal draft, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginUpdateVessel(token, jobId, draft, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndUpdateVessel(System.IAsyncResult result)
        {
            base.Channel.EndUpdateVessel(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVessel(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobId = ((System.Guid)(inValues[1]));
            decimal draft = ((decimal)(inValues[2]));
            return ((Pilat.IMobileService)(this)).BeginUpdateVessel(token, jobId, draft, callback, asyncState);
        }
        
        private object[] OnEndUpdateVessel(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndUpdateVessel(result);
            return null;
        }
        
        private void OnUpdateVesselCompleted(object state)
        {
            if ((this.UpdateVesselCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVesselCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVesselAsync(string token, System.Guid jobId, decimal draft)
        {
            this.UpdateVesselAsync(token, jobId, draft, null);
        }
        
        public void UpdateVesselAsync(string token, System.Guid jobId, decimal draft, object userState)
        {
            if ((this.onBeginUpdateVesselDelegate == null))
            {
                this.onBeginUpdateVesselDelegate = new BeginOperationDelegate(this.OnBeginUpdateVessel);
            }
            if ((this.onEndUpdateVesselDelegate == null))
            {
                this.onEndUpdateVesselDelegate = new EndOperationDelegate(this.OnEndUpdateVessel);
            }
            if ((this.onUpdateVesselCompletedDelegate == null))
            {
                this.onUpdateVesselCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVesselCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVesselDelegate, new object[] {
                        token,
                        jobId,
                        draft}, this.onEndUpdateVesselDelegate, this.onUpdateVesselCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginSubmitDefects(string token, System.Guid jobId, Pilat.Defect[] defects, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSubmitDefects(token, jobId, defects, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndSubmitDefects(System.IAsyncResult result)
        {
            base.Channel.EndSubmitDefects(result);
        }
        
        private System.IAsyncResult OnBeginSubmitDefects(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobId = ((System.Guid)(inValues[1]));
            Pilat.Defect[] defects = ((Pilat.Defect[])(inValues[2]));
            return ((Pilat.IMobileService)(this)).BeginSubmitDefects(token, jobId, defects, callback, asyncState);
        }
        
        private object[] OnEndSubmitDefects(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndSubmitDefects(result);
            return null;
        }
        
        private void OnSubmitDefectsCompleted(object state)
        {
            if ((this.SubmitDefectsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitDefectsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitDefectsAsync(string token, System.Guid jobId, Pilat.Defect[] defects)
        {
            this.SubmitDefectsAsync(token, jobId, defects, null);
        }
        
        public void SubmitDefectsAsync(string token, System.Guid jobId, Pilat.Defect[] defects, object userState)
        {
            if ((this.onBeginSubmitDefectsDelegate == null))
            {
                this.onBeginSubmitDefectsDelegate = new BeginOperationDelegate(this.OnBeginSubmitDefects);
            }
            if ((this.onEndSubmitDefectsDelegate == null))
            {
                this.onEndSubmitDefectsDelegate = new EndOperationDelegate(this.OnEndSubmitDefects);
            }
            if ((this.onSubmitDefectsCompletedDelegate == null))
            {
                this.onSubmitDefectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitDefectsCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitDefectsDelegate, new object[] {
                        token,
                        jobId,
                        defects}, this.onEndSubmitDefectsDelegate, this.onSubmitDefectsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginSubmitRemark(string token, System.Guid jobId, string remark, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSubmitRemark(token, jobId, remark, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndSubmitRemark(System.IAsyncResult result)
        {
            base.Channel.EndSubmitRemark(result);
        }
        
        private System.IAsyncResult OnBeginSubmitRemark(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobId = ((System.Guid)(inValues[1]));
            string remark = ((string)(inValues[2]));
            return ((Pilat.IMobileService)(this)).BeginSubmitRemark(token, jobId, remark, callback, asyncState);
        }
        
        private object[] OnEndSubmitRemark(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndSubmitRemark(result);
            return null;
        }
        
        private void OnSubmitRemarkCompleted(object state)
        {
            if ((this.SubmitRemarkCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitRemarkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitRemarkAsync(string token, System.Guid jobId, string remark)
        {
            this.SubmitRemarkAsync(token, jobId, remark, null);
        }
        
        public void SubmitRemarkAsync(string token, System.Guid jobId, string remark, object userState)
        {
            if ((this.onBeginSubmitRemarkDelegate == null))
            {
                this.onBeginSubmitRemarkDelegate = new BeginOperationDelegate(this.OnBeginSubmitRemark);
            }
            if ((this.onEndSubmitRemarkDelegate == null))
            {
                this.onEndSubmitRemarkDelegate = new EndOperationDelegate(this.OnEndSubmitRemark);
            }
            if ((this.onSubmitRemarkCompletedDelegate == null))
            {
                this.onSubmitRemarkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitRemarkCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitRemarkDelegate, new object[] {
                        token,
                        jobId,
                        remark}, this.onEndSubmitRemarkDelegate, this.onSubmitRemarkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginSubmitChit(string token, System.Guid jobId, System.DateTime _01_PilotStart, System.DateTime _02_ArriveStation, System.DateTime _03_DepartStation, System.DateTime _04_POB, System.DateTime _05_StartMoving, System.DateTime _06_EndMoving, System.DateTime _07_Disembark, System.DateTime _08_ArriveStation, System.DateTime _09_DepartStation, System.DateTime _10_ReturnHome, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSubmitChit(token, jobId, _01_PilotStart, _02_ArriveStation, _03_DepartStation, _04_POB, _05_StartMoving, _06_EndMoving, _07_Disembark, _08_ArriveStation, _09_DepartStation, _10_ReturnHome, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndSubmitChit(System.IAsyncResult result)
        {
            base.Channel.EndSubmitChit(result);
        }
        
        private System.IAsyncResult OnBeginSubmitChit(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobId = ((System.Guid)(inValues[1]));
            System.DateTime _01_PilotStart = ((System.DateTime)(inValues[2]));
            System.DateTime _02_ArriveStation = ((System.DateTime)(inValues[3]));
            System.DateTime _03_DepartStation = ((System.DateTime)(inValues[4]));
            System.DateTime _04_POB = ((System.DateTime)(inValues[5]));
            System.DateTime _05_StartMoving = ((System.DateTime)(inValues[6]));
            System.DateTime _06_EndMoving = ((System.DateTime)(inValues[7]));
            System.DateTime _07_Disembark = ((System.DateTime)(inValues[8]));
            System.DateTime _08_ArriveStation = ((System.DateTime)(inValues[9]));
            System.DateTime _09_DepartStation = ((System.DateTime)(inValues[10]));
            System.DateTime _10_ReturnHome = ((System.DateTime)(inValues[11]));
            return ((Pilat.IMobileService)(this)).BeginSubmitChit(token, jobId, _01_PilotStart, _02_ArriveStation, _03_DepartStation, _04_POB, _05_StartMoving, _06_EndMoving, _07_Disembark, _08_ArriveStation, _09_DepartStation, _10_ReturnHome, callback, asyncState);
        }
        
        private object[] OnEndSubmitChit(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndSubmitChit(result);
            return null;
        }
        
        private void OnSubmitChitCompleted(object state)
        {
            if ((this.SubmitChitCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitChitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitChitAsync(string token, System.Guid jobId, System.DateTime _01_PilotStart, System.DateTime _02_ArriveStation, System.DateTime _03_DepartStation, System.DateTime _04_POB, System.DateTime _05_StartMoving, System.DateTime _06_EndMoving, System.DateTime _07_Disembark, System.DateTime _08_ArriveStation, System.DateTime _09_DepartStation, System.DateTime _10_ReturnHome)
        {
            this.SubmitChitAsync(token, jobId, _01_PilotStart, _02_ArriveStation, _03_DepartStation, _04_POB, _05_StartMoving, _06_EndMoving, _07_Disembark, _08_ArriveStation, _09_DepartStation, _10_ReturnHome, null);
        }
        
        public void SubmitChitAsync(string token, System.Guid jobId, System.DateTime _01_PilotStart, System.DateTime _02_ArriveStation, System.DateTime _03_DepartStation, System.DateTime _04_POB, System.DateTime _05_StartMoving, System.DateTime _06_EndMoving, System.DateTime _07_Disembark, System.DateTime _08_ArriveStation, System.DateTime _09_DepartStation, System.DateTime _10_ReturnHome, object userState)
        {
            if ((this.onBeginSubmitChitDelegate == null))
            {
                this.onBeginSubmitChitDelegate = new BeginOperationDelegate(this.OnBeginSubmitChit);
            }
            if ((this.onEndSubmitChitDelegate == null))
            {
                this.onEndSubmitChitDelegate = new EndOperationDelegate(this.OnEndSubmitChit);
            }
            if ((this.onSubmitChitCompletedDelegate == null))
            {
                this.onSubmitChitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitChitCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitChitDelegate, new object[] {
                        token,
                        jobId,
                        _01_PilotStart,
                        _02_ArriveStation,
                        _03_DepartStation,
                        _04_POB,
                        _05_StartMoving,
                        _06_EndMoving,
                        _07_Disembark,
                        _08_ArriveStation,
                        _09_DepartStation,
                        _10_ReturnHome}, this.onEndSubmitChitDelegate, this.onSubmitChitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginRemoveDefect(string token, System.Guid jobId, System.Guid defectId, string removalReason, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRemoveDefect(token, jobId, defectId, removalReason, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndRemoveDefect(System.IAsyncResult result)
        {
            base.Channel.EndRemoveDefect(result);
        }
        
        private System.IAsyncResult OnBeginRemoveDefect(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string token = ((string)(inValues[0]));
            System.Guid jobId = ((System.Guid)(inValues[1]));
            System.Guid defectId = ((System.Guid)(inValues[2]));
            string removalReason = ((string)(inValues[3]));
            return ((Pilat.IMobileService)(this)).BeginRemoveDefect(token, jobId, defectId, removalReason, callback, asyncState);
        }
        
        private object[] OnEndRemoveDefect(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndRemoveDefect(result);
            return null;
        }
        
        private void OnRemoveDefectCompleted(object state)
        {
            if ((this.RemoveDefectCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveDefectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveDefectAsync(string token, System.Guid jobId, System.Guid defectId, string removalReason)
        {
            this.RemoveDefectAsync(token, jobId, defectId, removalReason, null);
        }
        
        public void RemoveDefectAsync(string token, System.Guid jobId, System.Guid defectId, string removalReason, object userState)
        {
            if ((this.onBeginRemoveDefectDelegate == null))
            {
                this.onBeginRemoveDefectDelegate = new BeginOperationDelegate(this.OnBeginRemoveDefect);
            }
            if ((this.onEndRemoveDefectDelegate == null))
            {
                this.onEndRemoveDefectDelegate = new EndOperationDelegate(this.OnEndRemoveDefect);
            }
            if ((this.onRemoveDefectCompletedDelegate == null))
            {
                this.onRemoveDefectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveDefectCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveDefectDelegate, new object[] {
                        token,
                        jobId,
                        defectId,
                        removalReason}, this.onEndRemoveDefectDelegate, this.onRemoveDefectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginSendPilotJobNotification(System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSendPilotJobNotification(jobNotificationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndSendPilotJobNotification(System.IAsyncResult result)
        {
            base.Channel.EndSendPilotJobNotification(result);
        }
        
        private System.IAsyncResult OnBeginSendPilotJobNotification(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            System.Guid jobNotificationId = ((System.Guid)(inValues[0]));
            return ((Pilat.IMobileService)(this)).BeginSendPilotJobNotification(jobNotificationId, callback, asyncState);
        }
        
        private object[] OnEndSendPilotJobNotification(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndSendPilotJobNotification(result);
            return null;
        }
        
        private void OnSendPilotJobNotificationCompleted(object state)
        {
            if ((this.SendPilotJobNotificationCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendPilotJobNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendPilotJobNotificationAsync(System.Guid jobNotificationId)
        {
            this.SendPilotJobNotificationAsync(jobNotificationId, null);
        }
        
        public void SendPilotJobNotificationAsync(System.Guid jobNotificationId, object userState)
        {
            if ((this.onBeginSendPilotJobNotificationDelegate == null))
            {
                this.onBeginSendPilotJobNotificationDelegate = new BeginOperationDelegate(this.OnBeginSendPilotJobNotification);
            }
            if ((this.onEndSendPilotJobNotificationDelegate == null))
            {
                this.onEndSendPilotJobNotificationDelegate = new EndOperationDelegate(this.OnEndSendPilotJobNotification);
            }
            if ((this.onSendPilotJobNotificationCompletedDelegate == null))
            {
                this.onSendPilotJobNotificationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendPilotJobNotificationCompleted);
            }
            base.InvokeAsync(this.onBeginSendPilotJobNotificationDelegate, new object[] {
                        jobNotificationId}, this.onEndSendPilotJobNotificationDelegate, this.onSendPilotJobNotificationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Pilat.IMobileService.BeginSendJobAlarmNotification(System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSendJobAlarmNotification(jobNotificationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Pilat.IMobileService.EndSendJobAlarmNotification(System.IAsyncResult result)
        {
            base.Channel.EndSendJobAlarmNotification(result);
        }
        
        private System.IAsyncResult OnBeginSendJobAlarmNotification(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            System.Guid jobNotificationId = ((System.Guid)(inValues[0]));
            return ((Pilat.IMobileService)(this)).BeginSendJobAlarmNotification(jobNotificationId, callback, asyncState);
        }
        
        private object[] OnEndSendJobAlarmNotification(System.IAsyncResult result)
        {
            ((Pilat.IMobileService)(this)).EndSendJobAlarmNotification(result);
            return null;
        }
        
        private void OnSendJobAlarmNotificationCompleted(object state)
        {
            if ((this.SendJobAlarmNotificationCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendJobAlarmNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendJobAlarmNotificationAsync(System.Guid jobNotificationId)
        {
            this.SendJobAlarmNotificationAsync(jobNotificationId, null);
        }
        
        public void SendJobAlarmNotificationAsync(System.Guid jobNotificationId, object userState)
        {
            if ((this.onBeginSendJobAlarmNotificationDelegate == null))
            {
                this.onBeginSendJobAlarmNotificationDelegate = new BeginOperationDelegate(this.OnBeginSendJobAlarmNotification);
            }
            if ((this.onEndSendJobAlarmNotificationDelegate == null))
            {
                this.onEndSendJobAlarmNotificationDelegate = new EndOperationDelegate(this.OnEndSendJobAlarmNotification);
            }
            if ((this.onSendJobAlarmNotificationCompletedDelegate == null))
            {
                this.onSendJobAlarmNotificationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendJobAlarmNotificationCompleted);
            }
            base.InvokeAsync(this.onBeginSendJobAlarmNotificationDelegate, new object[] {
                        jobNotificationId}, this.onEndSendJobAlarmNotificationDelegate, this.onSendJobAlarmNotificationCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state)
        {
            if ((this.OpenCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync()
        {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState)
        {
            if ((this.onBeginOpenDelegate == null))
            {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null))
            {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null))
            {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state)
        {
            if ((this.CloseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync()
        {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState)
        {
            if ((this.onBeginCloseDelegate == null))
            {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null))
            {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null))
            {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        private class MobileServiceClientChannel : ChannelBase<Pilat.IMobileService>, Pilat.IMobileService
        {
            
            public MobileServiceClientChannel(System.ServiceModel.ClientBase<Pilat.IMobileService> client) : 
                    base(client)
            {
            }
            
            public System.IAsyncResult BeginLogin(string username, string password, string deviceToken, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[3];
                _args[0] = username;
                _args[1] = password;
                _args[2] = deviceToken;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLogin(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveJobs(string token, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveJobs", _args, callback, asyncState);
                return _result;
            }
            
            public Pilat.Job[] EndRetrieveJobs(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Pilat.Job[] _result = ((Pilat.Job[])(base.EndInvoke("RetrieveJobs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveJob(string token, System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = jobNotificationId;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveJob", _args, callback, asyncState);
                return _result;
            }
            
            public Pilat.Job EndRetrieveJob(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Pilat.Job _result = ((Pilat.Job)(base.EndInvoke("RetrieveJob", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveDefectClassifications(string token, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveDefectClassifications", _args, callback, asyncState);
                return _result;
            }
            
            public Pilat.DefectClassification[] EndRetrieveDefectClassifications(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Pilat.DefectClassification[] _result = ((Pilat.DefectClassification[])(base.EndInvoke("RetrieveDefectClassifications", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveDirections(string token, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveDirections", _args, callback, asyncState);
                return _result;
            }
            
            public Pilat.Direction[] EndRetrieveDirections(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Pilat.Direction[] _result = ((Pilat.Direction[])(base.EndInvoke("RetrieveDirections", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveLocations(string token, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveLocations", _args, callback, asyncState);
                return _result;
            }
            
            public Pilat.Location[] EndRetrieveLocations(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Pilat.Location[] _result = ((Pilat.Location[])(base.EndInvoke("RetrieveLocations", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAcknowledgeNotification(string token, System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = jobNotificationId;
                System.IAsyncResult _result = base.BeginInvoke("AcknowledgeNotification", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAcknowledgeNotification(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("AcknowledgeNotification", _args, result);
            }
            
            public System.IAsyncResult BeginAcknowledgeAlarm(string token, System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = jobNotificationId;
                System.IAsyncResult _result = base.BeginInvoke("AcknowledgeAlarm", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAcknowledgeAlarm(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("AcknowledgeAlarm", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateAlarmAdvance(string token, System.Guid jobNotificationId, Pilat.AlarmAdvance alarmAdvance, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = jobNotificationId;
                _args[2] = alarmAdvance;
                System.IAsyncResult _result = base.BeginInvoke("UpdateAlarmAdvance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateAlarmAdvance(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("UpdateAlarmAdvance", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateJob(string token, System.Guid jobId, System.Nullable<int> fromDirectionValue, System.Nullable<System.Guid> fromLocationId, System.Nullable<int> toDirectionValue, System.Nullable<System.Guid> toLocationId, System.Nullable<Pilat.JobType> jobType, System.Nullable<int> tugs, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[8];
                _args[0] = token;
                _args[1] = jobId;
                _args[2] = fromDirectionValue;
                _args[3] = fromLocationId;
                _args[4] = toDirectionValue;
                _args[5] = toLocationId;
                _args[6] = jobType;
                _args[7] = tugs;
                System.IAsyncResult _result = base.BeginInvoke("UpdateJob", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateJob(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("UpdateJob", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateVessel(string token, System.Guid jobId, decimal draft, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = jobId;
                _args[2] = draft;
                System.IAsyncResult _result = base.BeginInvoke("UpdateVessel", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateVessel(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("UpdateVessel", _args, result);
            }
            
            public System.IAsyncResult BeginSubmitDefects(string token, System.Guid jobId, Pilat.Defect[] defects, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = jobId;
                _args[2] = defects;
                System.IAsyncResult _result = base.BeginInvoke("SubmitDefects", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSubmitDefects(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SubmitDefects", _args, result);
            }
            
            public System.IAsyncResult BeginSubmitRemark(string token, System.Guid jobId, string remark, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = jobId;
                _args[2] = remark;
                System.IAsyncResult _result = base.BeginInvoke("SubmitRemark", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSubmitRemark(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SubmitRemark", _args, result);
            }
            
            public System.IAsyncResult BeginSubmitChit(string token, System.Guid jobId, System.DateTime _01_PilotStart, System.DateTime _02_ArriveStation, System.DateTime _03_DepartStation, System.DateTime _04_POB, System.DateTime _05_StartMoving, System.DateTime _06_EndMoving, System.DateTime _07_Disembark, System.DateTime _08_ArriveStation, System.DateTime _09_DepartStation, System.DateTime _10_ReturnHome, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[12];
                _args[0] = token;
                _args[1] = jobId;
                _args[2] = _01_PilotStart;
                _args[3] = _02_ArriveStation;
                _args[4] = _03_DepartStation;
                _args[5] = _04_POB;
                _args[6] = _05_StartMoving;
                _args[7] = _06_EndMoving;
                _args[8] = _07_Disembark;
                _args[9] = _08_ArriveStation;
                _args[10] = _09_DepartStation;
                _args[11] = _10_ReturnHome;
                System.IAsyncResult _result = base.BeginInvoke("SubmitChit", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSubmitChit(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SubmitChit", _args, result);
            }
            
            public System.IAsyncResult BeginRemoveDefect(string token, System.Guid jobId, System.Guid defectId, string removalReason, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = jobId;
                _args[2] = defectId;
                _args[3] = removalReason;
                System.IAsyncResult _result = base.BeginInvoke("RemoveDefect", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveDefect(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("RemoveDefect", _args, result);
            }
            
            public System.IAsyncResult BeginSendPilotJobNotification(System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = jobNotificationId;
                System.IAsyncResult _result = base.BeginInvoke("SendPilotJobNotification", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendPilotJobNotification(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SendPilotJobNotification", _args, result);
            }
            
            public System.IAsyncResult BeginSendJobAlarmNotification(System.Guid jobNotificationId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = jobNotificationId;
                System.IAsyncResult _result = base.BeginInvoke("SendJobAlarmNotification", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendJobAlarmNotification(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SendJobAlarmNotification", _args, result);
            }
        }
    }
}
